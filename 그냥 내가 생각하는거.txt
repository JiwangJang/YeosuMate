공부할 개념(공부해서 블로그에 정리글 올리기)
 1. CORS

 인증방식 -> JWT기반인증

 JWT인증 요약
  1. 사용자가 로그인할 경우 accessToken과 refreshToken발행
  2. refreshToken은 redis에 user_id를 키로 하여 저장
  3. 사용자에게 accessToken과 refreshToken은 쿠키로 내려줌
  4. 사용자가 요청할 때 헤더에 엑세스토큰넣고 바디에 리프레쉬토큰
  5. accessToken이 검증되면 그대로 사용 받아주고 새로운 엑세스토큰 보내주고, 만료시 리프레쉬토큰의 유효기간을 확인해서 남아있으면 엑세스토큰 재발급

  accessToken은 쿠키로 관리하고 유효기간은 5분으로 설정
  refreshToken은 쿠키로 관리하고 유효기간은 2주정도로 설정
  모바일의 경우 토큰이 있으면 앱상에선 로그인 시켜주나, 실제 요청시 accessToken이나 refreshToken이 만료돼 있으면 새로운 토큰 발급후 전송 

  JWT 저장소
  localStorage vs Cookie

  localStorage -> XSS공격에 취약하나(JS로 접근가능하므로), CSRF공격방어에 강력함
  Cookies -> 쿠키에 httpOnly걸어두면 XSS공격방어에는 강력하나, CSRF공격에는 취약함(자동으로 쿠키를 보내기때문에)

  결론
  쿠키에 저장하고 httpOnly걸고, Domain속성을 내 서버로만 한정 + 민감한 요청에 대해서는 csrf 토큰 인증하게 만들기
  

회원가입 API의 경우 Postman등 웹브라우저를 통하지 않고 로그인 하는 경우가 있으므로 이것은 전화번호 인증확인을 이용해 방지

회원가입
  1. 정책동의(개인정보 수집 및 이용, 서비스 이용약관)
  2. 핸드폰 번호 인증
  3. 아이디 검증
  4. 비밀번호검증
  5. 회원가입 완료 알림 + 닉네임 및 프사 설정할 지 질문
  6. 설정하는 경우 설정할 수 있게 하기(보안 신경써야함, csrf사용)
  